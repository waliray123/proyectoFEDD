/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import analizadores.LexerSAC;
import analizadores.ParserSAC;
import controladores.ControlCargarDatos;
import controladores.GuardadoDatos;
import estructuras.BTree;
import estructuras.ListaCircDobEnl;
import estructuras.ListaDobEnl;
import estructuras.ListaEnlSim;
import estructuras.PHash;
import estructuras.TablaHash;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.StringReader;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.APPROVE_OPTION;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import nodos.Llave;
import objetos.Edificio;
import objetos.ErrorCom;
import objetos.Estudiante;
import objetos.Usuario;

/**
 *
 * @author user-ubunto
 */
public class JFPrincipal extends javax.swing.JFrame {

    private ListaEnlSim<ErrorCom> erroresComp;
    private GuardadoDatos guardadoDatos;
    private TablaHash<Estudiante> estudiantes;
    private String pathGuardado;

    /**
     * Creates new form JFPrincipal
     */
    public JFPrincipal() {
        initComponents();
        this.guardadoDatos = new GuardadoDatos();
        //this.controlCargarDatos = new ControlCargarDatos(this.guardadoDatos);
        insertarSuper();
        this.estudiantes = new TablaHash<>();
        this.pathGuardado = "";        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Sistema de Asignaci칩n de Cursos");

        jButton1.setText("Cargar Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Ingresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("Graficar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Cargar archivo
        String documento = "";
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Archivo txt", "txt"));
            fileChooser.setAcceptAllFileFilterUsed(false);
            int seleccion = fileChooser.showOpenDialog(this);
            if (seleccion == APPROVE_OPTION) {
                String pathFile = fileChooser.getSelectedFile().getPath();
                FileReader entrada = new FileReader(pathFile);
                int cont = entrada.read();
                while (cont != -1) {
                    documento += (char) cont;
                    cont = entrada.read();
                }
                //this.pathCargado = pathFile;
            }
            if (seleccion == APPROVE_OPTION) {
                ControlCargarDatos controlCargarDatos = new ControlCargarDatos(this.guardadoDatos);
                controlCargarDatos.cargarDatos(documento);
                JOptionPane.showMessageDialog(this, "Archivo cargado correctamente", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Info", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Info", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Login de colaboradores y usuarios
        JFrame frame = new JFrame();
        JPanel panel = new JPanel(new BorderLayout(5, 5));

        JPanel label = new JPanel(new GridLayout(0, 1, 2, 2));
        label.add(new JLabel("Usuario", SwingConstants.RIGHT));
        label.add(new JLabel("Contrase침a", SwingConstants.RIGHT));
        panel.add(label, BorderLayout.WEST);

        JPanel controls = new JPanel(new GridLayout(0, 1, 2, 2));
        JTextField username = new JTextField();
        controls.add(username);
        JPasswordField password = new JPasswordField();
        controls.add(password);
        panel.add(controls, BorderLayout.CENTER);

        JOptionPane.showMessageDialog(frame, panel, "login", JOptionPane.OK_CANCEL_OPTION);

        //Recibir datos ingresados        
        String usuario = username.getText();
        String contrasenia = String.valueOf(password.getPassword());
        boolean esValido = true;
        if (usuario.isEmpty()) {
            esValido = false;
            JOptionPane.showMessageDialog(null, "Ingrese un nombre de usuario", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (contrasenia.isEmpty()) {
            esValido = false;
            JOptionPane.showMessageDialog(null, "Ingrese una contrase침a", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (esValido) {
            //Validar usuario
            Usuario usuarioLog = this.guardadoDatos.buscarUsuarioPorNombreContrasena(usuario, contrasenia);
            if (usuarioLog == null) {
                JOptionPane.showMessageDialog(null, "Usuario o contrase침a incorrectos", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String tipo = usuarioLog.getTipo();
                if (tipo.equals("colaborador")) {
                    JFColaborador jfColab = new JFColaborador(this.guardadoDatos);
                    jfColab.setVisible(true);
                } else if (tipo.equals("super")) {
                    JFSuperU jfColab = new JFSuperU(this.guardadoDatos);
                    jfColab.setVisible(true);
                } else if (tipo.equals("estudiante")) {
                    JFEstudiante jfColab = new JFEstudiante(usuarioLog.getEstudiante(),this.guardadoDatos);
                    jfColab.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (pathGuardado.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no has ingresado la direccion de guardado de tus archivos", "Info", JOptionPane.INFORMATION_MESSAGE);
            try {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                fileChooser.setAcceptAllFileFilterUsed(false);
                int seleccion = fileChooser.showOpenDialog(this);
                if (seleccion == APPROVE_OPTION) {
                    String pathFile = fileChooser.getSelectedFile().getPath();
                    this.pathGuardado = pathFile;
                    JFGraphviz jfGenImg = new JFGraphviz(this.guardadoDatos, this.pathGuardado);
                    jfGenImg.setVisible(true);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Info", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JFGraphviz jfGenImg = new JFGraphviz(this.guardadoDatos, this.pathGuardado);
            jfGenImg.setVisible(true);
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void insertarSuper() {
        Usuario usuarioIns = new Usuario();
        usuarioIns.setId("0");
        usuarioIns.setNombre("super");
        usuarioIns.setContrasenia("asdf");
        usuarioIns.setTipo("super");
        this.guardadoDatos.insertarUsuario(usuarioIns);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
